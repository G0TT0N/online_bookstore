{"version":3,"sources":["actions/booksAct.js","Components/BookCard.jsx","actions/cartAct.js","Containers/BookCard.js","Components/Filter.jsx","actions/filterAct.js","Containers/Filter.js","Components/Menu.jsx","Containers/Menu.js","Components/App.jsx","Containers/App.js","reducers/bookRdc.js","reducers/cartRdc.js","reducers/filterRdc.js","reducers/indexRdc.js","index.js","store.js"],"names":["setBooks","books","type","payload","BookCard","book","title","author","price","image","addToCart","addedCount","Card","Image","src","wrapped","ui","Content","Header","Meta","className","extra","href","Icon","name","Button","onClick","bind","obj","removeFromCart","id","connect","cart","items","reduce","count","dispatch","bindActionCreators","cartActions","FilterContainer","setFilter","filterBy","searchQuery","setSearchQuery","Menu","secondary","Item","active","Input","icon","onChange","e","target","value","placeholder","filter","filterActions","CartComponent","List","selection","divided","verticalAlign","floated","color","avatar","MenuComponent","totalPrice","position","Popup","trigger","content","map","on","hideOnScroll","total","length","uniqBy","o","App","this","props","axios","get","then","response","data","isReady","Container","Group","itemsPerRow","key","Component","searchBooks","orderBy","sortBy","toLowerCase","indexOf","filterBooks","booksActions","initialState","combineReducers","state","action","store","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59b984c2.chunk.js","sourcesContent":["export const setBooks = books => ({\n    type: 'SET_BOOKS',\n    payload: books\n});","import React from 'react'\nimport {Card, Icon, Image, Button} from 'semantic-ui-react'\n\nconst BookCard = (book) => {\n    const {title, author, price, image, addToCart, addedCount} = book;\n    return (\n        <Card>\n            <Image src={image} wrapped ui={false}/>\n            <Card.Content>\n                <Card.Header>{title}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>{author}</span>\n                </Card.Meta>\n            </Card.Content>\n            <Card.Content extra>\n                <a href='/'>\n                    <Icon name='rub'/>\n                    {price}\n                </a>\n            </Card.Content>\n            <Button onClick={addToCart.bind(this, book)}>\n                Добавить в корзину {addedCount > 0 && `(${addedCount})`}\n            </Button>\n        </Card>\n    )\n};\n\nexport default BookCard\n\n","export const addToCart = obj => ({\n    type: 'ADD_BOOK_TO_CART',\n    payload: obj,\n});\n\nexport const removeFromCart = id => ({\n    type: 'REMOVE_BOOK_FROM_CART',\n    payload: id,\n});","import React from 'react';\nimport {connect} from 'react-redux';\nimport BookCard from \"../Components/BookCard\";\nimport * as cartActions from \"../actions/cartAct\";\nimport {bindActionCreators} from \"redux\";\n\nconst mapStateToProps = ({cart}, {id}) => ({\n    addedCount: cart.items.reduce((count, book) =>\n        count + (book.id === id ? 1 : 0), 0)\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    ...bindActionCreators(cartActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(BookCard);","import React from 'react'\nimport {Menu, Input} from 'semantic-ui-react'\n\nconst FilterContainer = ({setFilter, filterBy, searchQuery, setSearchQuery}) => (\n    <Menu secondary>\n        <Menu.Item\n            active={filterBy === 'all'}\n            onClick={setFilter.bind(this, 'all')}>\n            Все\n        </Menu.Item>\n        <Menu.Item\n            active={filterBy === 'price_high'}\n            onClick={setFilter.bind(this, 'price_high')}>\n            Цена (дорогие)\n        </Menu.Item>\n        <Menu.Item\n            active={filterBy === 'price_low'}\n            onClick={setFilter.bind(this, 'price_low')}>\n            Цена (дешевые)\n        </Menu.Item>\n        <Menu.Item\n            active={filterBy === 'author'}\n            onClick={setFilter.bind(this, 'author')}>\n            Автор\n        </Menu.Item>\n        <Menu.Item>\n            <Input\n                icon=\"search\"\n                onChange={e => setSearchQuery(e.target.value)}\n                value={searchQuery}\n                placeholder=\"Введите запрос...\"\n            />\n        </Menu.Item>\n    </Menu>\n);\n\n\nexport default FilterContainer;\n","export const setFilter = filter => ({\n    type: 'SET_FILTER',\n    payload: filter\n});\n\nexport const setSearchQuery = value => ({\n    type: 'SET_QUERY',\n    payload: value\n});","import React from 'react';\nimport {connect} from 'react-redux';\nimport FilterContainer from \"../Components/Filter\";\nimport * as filterActions from \"../actions/filterAct\";\nimport {bindActionCreators} from \"redux\";\n\nconst mapStateToProps = ({books, filter}) => ({\n    filterBy: filter.filterBy,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    ...bindActionCreators(filterActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(FilterContainer);\n","import React from 'react'\nimport {Menu, List, Popup, Button, Image} from 'semantic-ui-react'\n\nconst CartComponent = ({title, id, image, removeFromCart}) => (\n    <List selection divided verticalAlign='middle'>\n        <List.Item>\n            <List.Content floated='right'>\n                <Button onClick={removeFromCart.bind(this, id)} color={'red'}>Удалить</Button>\n            </List.Content>\n            <Image avatar src={image}/>\n            <List.Content>{title}</List.Content>\n        </List.Item>\n    </List>\n);\n\nconst MenuComponent = ({totalPrice, count, items}) => {\n    return (\n        <Menu>\n            <Menu.Item\n                name='browse'\n            >\n                Магазин книг\n            </Menu.Item>\n\n            <Menu.Menu position='right'>\n                <Menu.Item\n                    name='signup'\n                >\n                    Итого &nbsp; <b>{totalPrice}</b> руб.\n                </Menu.Item>\n\n                <Popup\n                    trigger={\n                        <Menu.Item\n                            name='help'\n                        >\n                            Корзина (<b>{count}</b>)\n                        </Menu.Item>\n                    }\n                    content={items.map(book => <CartComponent {...book}/>)}\n                    on={'click'}\n                    hideOnScroll\n                />\n            </Menu.Menu>\n        </Menu>\n    )\n};\n\n\nexport default MenuComponent;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Menu from \"../Components/Menu\";\nimport * as cartActions from \"../actions/cartAct\";\nimport {bindActionCreators} from \"redux\";\nimport uniqBy from 'lodash/uniqBy';\n\nconst mapStateToProps = ({cart}) => ({\n    totalPrice: cart.items.reduce((total, book) => total + book.price, 0),\n    count: cart.items.length,\n    items: uniqBy(cart.items, o => o.id)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    ...bindActionCreators(cartActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Menu);\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Container} from \"semantic-ui-react\";\nimport BookCard from \"../Containers/BookCard\";\nimport { Card } from 'semantic-ui-react'\nimport Filter from \"../Containers/Filter\";\nimport Menu from \"../Containers/Menu\";\n\n\nclass App extends Component {\n    componentDidMount() {\n        const {setBooks} = this.props;\n        axios.get('https://g0tt0n.github.io/public/books.json').then(response => {\n            setBooks(response.data);\n        })\n    }\n\n    render() {\n        const {books, isReady, setFilter} = this.props;\n        return (\n            <Container>\n                <Menu/>\n                <Filter/>\n                <Card.Group itemsPerRow={4}>\n                    {!isReady\n                        ? 'Download...'\n                        : books.map(book => (\n                            <BookCard {...book} key={book.id}/>\n                        ))}\n                </Card.Group>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as booksActions from \"../actions/booksAct\";\nimport App from '../Components/App'\nimport {bindActionCreators} from \"redux\";\nimport orderBy from 'lodash/orderBy';\n\nconst sortBy = (books, filterBy) => {\n    switch (filterBy) {\n        case 'price_high':\n            return orderBy(books, 'price', 'desc');\n        case 'price_low':\n            return orderBy(books, 'price', 'asc');\n        case 'author':\n            return orderBy(books, 'author', 'asc');\n        default:\n            return books;\n    }\n};\n\nconst filterBooks = (books, searchQuery) =>\n    books.filter(\n        o =>\n            o.title.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0 ||\n            o.author.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0,\n    );\n\nconst searchBooks = (books, filterBy, searchQuery) => {\n    return sortBy(filterBooks(books, searchQuery), filterBy);\n};\n\nconst mapStateToProps = ({books, filter}) => ({\n    books: books.items && searchBooks(books.items, filter.filterBy, filter.searchQuery),\n    isReady: books.isReady,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    ...bindActionCreators(booksActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(App);","const initialState = {\n    isReady: false,\n    items: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_BOOKS':\n            return {\n                ...state,\n                items: action.payload,\n                isReady: true,\n            };\n        case 'SET_IS_READY':\n            return {\n                ...state,\n                isReady: action.payload,\n            };\n        default:\n            return state;\n    }\n};","const initialState = {\n    items: []\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_BOOK_TO_CART':\n            return {\n                ...state,\n                items: [\n                    ...state.items,\n                    action.payload\n                ],\n            };\n        case 'REMOVE_BOOK_FROM_CART':\n            return {\n                ...state,\n                items: state.items.filter(\n                    o => o.id != action.payload\n                )\n            };\n\n        default:\n            return state\n    }\n}","const initialState = {\n    filterBy: 'all',\n    searchQuery: '',\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_FILTER':\n            return {\n                ...state,\n                filterBy: action.payload\n            };\n        case 'SET_QUERY':\n            return {\n                ...state,\n                searchQuery: action.payload\n            };\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport books from './bookRdc';\nimport cart from './cartRdc';\nimport filter from './filterRdc';\n\nexport default combineReducers ({\n    books,\n    cart,\n    filter\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Containers/App';\nimport {Provider} from 'react-redux';\nimport createStore from \"./store\";\nimport 'semantic-ui-css/semantic.min.css';\nimport './app.css';\n\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'));\n\n\n","import {createStore, applyMiddleware} from 'redux';\nimport logger from \"redux-logger\";\nimport rootReducer from './reducers/indexRdc';\n\n/*function reducer(state = [], action) {\n    return state\n}\n\nconst create = () => {\n    const store = createStore(reducer, applyMiddleware(logger));\n    return store;\n};\n\nconst store = create();\n\nstore.dispatch({\n    type: 'ADD_TODO',\n    text: 'Read the docs'\n});*/\n\nexport default () => {\n    const store = createStore(rootReducer, applyMiddleware(logger));\n    return store;\n}\n\n"],"sourceRoot":""}